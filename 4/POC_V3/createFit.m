function [fitresult, gof] = createFit(funcXData, funcYMeans, bincounts, ...
    iNeuron, MODE)
%CREATEFIT(FUNCXDATA,FUNCYMEANS)
%  Create a fit.
%
%  Data for 'Interpolant Linear Fit' fit:
%      X Input : funcXData
%      Y Output: funcYMeans
%  Output:
%      fitresult : a fit object representing the fit.
%      gof : structure with goodness-of fit info.
%
%  See also FIT, CFIT, SFIT.

%  Auto-generated by MATLAB on 02-Feb-2015 03:29:43


%% Fit: 'Interpolant Linear Fit'.
[xData, yData] = prepareCurveData( funcXData, funcYMeans );

% Set up fittype and options.
ft = 'linearinterp';

% Fit model to data.
[fitresult, gof] = fit( xData, yData, ft, 'Normalize', 'on' );

% Plot fit with data.
h = plot( fitresult, xData, yData );

legend( h, 'After Linear Filter vs. Rate', ...
    sprintf('Interpolant Linear Fit (%s)', MODE), 'Location', 'NorthEast');

% Label axes
xlabel( 'After Linear Filter' );
ylabel( 'Rate' );

%add bin counts axis
title(sprintf('Neuron #%d', iNeuron));

ax1 = gca; % current axes
ax1_pos = ax1.Position; % position of first axes


ax2 = axes('Position',ax1_pos,...
    'XAxisLocation','top',...
    'YAxisLocation','right',...
    'Visible', 'off', ...
    'Color','none');
%ax2.XColor = [0 0 0 0]; %transparent

ylabel(ax2, 'Bin counts');
ylim(ax2, [-100, 2500]);

hl = line(xData,bincounts,'Parent',ax2,'Color','k');
hl.LineStyle = '--';
hl.Color(4) = 0.5;

%[~, idx] = max(bincounts);

%ht = text(xData(idx)-0.3, bincounts(idx), '\bf Bin count');

%ht.Color = [105 105 105] / 150; %dim gray


grid on


